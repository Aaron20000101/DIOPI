[type](scope): <imperative lowercase verbs> <rest of the subject>

# ## Help ##
#
# Commit message needs to follow the following rules.
#   * Limit the subject line to 72 characters
#   * Do not end the subject line with a period
#   * Use the imperative mood in the subject line
#   * Separate subject from body with a blank line, if there is a message body
#   * Wrap the body at 80 characters
#   * Use the body to explain what and why vs. how
#   * Don't repeat the same word in type and subject
#
# Type of commit:
#   feat:     The new feature being added to a particular application
#   fix:      A bug fix
#   style:    Feature and updates related to styling
#   refactor: Refactoring a specific section of the codebase
#   test:     Everything related to testing
#   docs:     Everything related to documentation
#   chore:    Regular code maintenance
#   tool:     Scripts and binary which not part of the last compiled library
#   perf:     Small code change for performance tuning
#   wa:       Work around, use wa(errata-id)
#   BRSW-XXX: jira fix for this commit, ex: [BRSW-1105](framework): fix the layout issue
#   MLFW-XXX: jira fix for this commit, ex: [MLFW-651](framework): stream device is xla
#
# Scope(optional):
#   * It is usually a specific module.
#   * If the module is large, use module:submodule separated by colons.
#     * ex: [fix](torch_br:framework): fix backend issues
#
# Footer:
#   * jira: BRSW-XXX MLFW-xxx
#   * close #XXX
#   * errata: id
#
# Subject line imperative lowercase verbs:
#   add:      Create a capability e.g. feature, test, dependency.
#   drop:     Delete a capability e.g. feature, test, dependency.
#   fix:      Fix an issue e.g. bug, typo, accident, misstatement.
#   bump:     Increase the version of something e.g. a dependency.
#   make:     Change the build process, or tools, or infrastructure.
#   start:    Begin doing something; e.g. enable a toggle, feature flag, etc.
#   stop:     End doing something; e.g. disable a toggle, feature flag, etc.
#   optimize: A change that MUST be just about performance, e.g. speed up code.
#   document: A change that MUST be only in the documentation, e.g. help files.
#   refactor: A change that MUST be just refactoring.
#   reformat: A change that MUST be just format, e.g. indent line, trim space, etc.
#   rephrase: A change that MUST be just textual, e.g. edit a comment, doc, etc.
#
# BirenTech Git & GitHub Usage Guidelines
#   * https://github01.birentech.com/pages/software/portal/guidelines/git_usage_guide.html
#
# Conventional Commits
#   * https://www.conventionalcommits.org/en/v1.0.0/
